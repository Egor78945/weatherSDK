plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.egor78945'
version = '1.0.0'
archivesBaseName = 'weatherSDK'

repositories {
    mavenCentral()
}

ext {
    ossrhUsername = System.getenv('OSSRH_USERNAME')
    ossrhPassword = System.getenv('OSSRH_PASSWORD')

    signingKeyId = System.getenv('SIGNING_KEY_ID')
    signingPassword = System.getenv('SIGNING_PASSWORD')
    signingRingFile = System.getenv('SIGNING_SECRET_KEY')
}

println(ossrhUsername)
println(signingRingFile)

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.2'
    implementation 'com.google.code.gson:gson:2.12.1'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.10.0'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'weatherSDK'
                description = 'Library for access to weather in any city.'
                url = 'https://github.com/weatherSDK'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'egor78945'
                        name = 'Egor Petrov'
                        email = 'egor78396@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/weatherSDK.git'
                    developerConnection = 'scm:git:ssh://git@github.com:weatherSDK.git'
                    url = 'https://github.com/Egor78945/weatherSDK'
                }
            }
        }
    }

    repositories {
        maven {
            name = "ossrh"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(signingKeyId, signingPassword, signingRingFile)
}